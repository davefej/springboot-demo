/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.springboot.api.api;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

import com.example.springboot.model.book.Book;

import java.util.List;
import java.util.Optional;
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-06-21T11:00:44.767855400+02:00[Europe/Budapest]")

@Validated
public interface BooksApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /books/createRandom
     *
     * @return OK (status code 200)
     */
    @RequestMapping(value = "/books/createRandom",
        produces = { "*/*" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Book> createRandomBook() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("*/*"))) {
                    String exampleString = "{ \"ratings\" : [ 6, 6 ], \"name\" : \"name\", \"id\" : 0, \"authors\" : [ { \"name\" : \"name\" }, { \"name\" : \"name\" } ] }";
                    ApiUtil.setExampleResponse(request, "*/*", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /books/{id}
     *
     * @param id  (required)
     * @return OK (status code 200)
     */
    @RequestMapping(value = "/books/{id}",
        produces = { "*/*" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Book> getBook( @PathVariable("id") Long id) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("*/*"))) {
                    String exampleString = "{ \"ratings\" : [ 6, 6 ], \"name\" : \"name\", \"id\" : 0, \"authors\" : [ { \"name\" : \"name\" }, { \"name\" : \"name\" } ] }";
                    ApiUtil.setExampleResponse(request, "*/*", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /books
     *
     * @return OK (status code 200)
     */
    
    @RequestMapping(value = "/books",
        produces = { "*/*" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Book>> getBooks() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("*/*"))) {
                    String exampleString = "{ \"ratings\" : [ 6, 6 ], \"name\" : \"name\", \"id\" : 0, \"authors\" : [ { \"name\" : \"name\" }, { \"name\" : \"name\" } ] }";
                    ApiUtil.setExampleResponse(request, "*/*", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /books/ratingsAbove/{rating}
     *
     * @param rating  (required)
     * @return OK (status code 200)
     */
    
    @RequestMapping(value = "/books/ratingsAbove/{rating}",
        produces = { "*/*" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Book>> topRatedBooks( @PathVariable("rating") Double rating) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("*/*"))) {
                    String exampleString = "{ \"ratings\" : [ 6, 6 ], \"name\" : \"name\", \"id\" : 0, \"authors\" : [ { \"name\" : \"name\" }, { \"name\" : \"name\" } ] }";
                    ApiUtil.setExampleResponse(request, "*/*", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
